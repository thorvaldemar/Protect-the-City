package dk.thorvaldemar.shops.Witch;

import java.util.ArrayList;

import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.Material;
import org.bukkit.enchantments.Enchantment;
import org.bukkit.entity.Entity;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.inventory.InventoryClickEvent;
import org.bukkit.event.player.PlayerInteractEntityEvent;
import org.bukkit.inventory.Inventory;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.meta.ItemMeta;

import dk.thorvaldemar.Main;
import dk.thorvaldemar.enums.functions.getTotem;
import dk.thorvaldemar.enums.lists.Shops;
import dk.thorvaldemar.enums.lists.Totems;
import dk.thorvaldemar.shops.Blacksmith.blackSmith;

public class Witch implements Listener {

	private static Main plugin;

	public Witch(Main pl) {
		plugin = pl;
	}

	public static Inventory inv = Bukkit.createInventory(null, 27,
			ChatColor.BLUE + "" + ChatColor.BOLD + "WITCH");

	@EventHandler
	public void onInventoryClick(InventoryClickEvent event) {
		Player p = (Player) event.getWhoClicked();
		ItemStack clicked = event.getCurrentItem();
		Inventory inventory = event.getInventory();
		if (inventory.getName().equals(inv.getName())) {
			event.setCancelled(true);
			if (isItem(clicked, 10)) {
				int money = Integer.parseInt(inv.getItem(10).getItemMeta().getLore().get(0)
						.replaceAll(ChatColor.GOLD + "" + ChatColor.BOLD, "").replace("$", ""));
				if (haveMoney(money, p)) {
					removeMoney(money, p);
					getTotem.giveTotem(p, Totems.UNDEATHNESS, 1);
					p.sendMessage(
							ChatColor.GREEN + "You've just buyed " + ChatColor.DARK_GREEN + "TOTEM OF UNDEATHNESS");
				} else {
					p.sendMessage(ChatColor.RED + "You do not have enough money");
				}
			}

			if (isItem(clicked, 26)) {
				p.openInventory(blackSmith.inv);
				return;
			}

			setupInv(inv, p);
		}
	}

	public static void openInventory(Player p) {
		p.openInventory(inv);
		setupInv(inv, p);
	}

	public static void setupInv(Inventory inv, Player p) {

		inv.setItem(4, createItem(Material.DOUBLE_PLANT, 100,
				ChatColor.YELLOW + "TOTEM OF " + ChatColor.GOLD + "UNDEATHNESS"));
		inv.setItem(5,
				createItem(Material.DOUBLE_PLANT, 100, ChatColor.YELLOW + "TOTEM OF " + ChatColor.RED + "KILLNESS"));
		inv.setItem(6,
				createItem(Material.DOUBLE_PLANT, 100, ChatColor.YELLOW + "TOTEM OF " + ChatColor.RED + "REVENGENESS"));
		inv.setItem(7,
				createItem(Material.DOUBLE_PLANT, 100, ChatColor.YELLOW + "TOTEM OF " + ChatColor.BLUE + "FREEZNESS"));
		inv.setItem(8, createItem(Material.DOUBLE_PLANT, 100,
				ChatColor.YELLOW + "TOTEM OF " + ChatColor.DARK_GREEN + "WEAKNESS"));
		inv.setItem(9, createItem(Material.DOUBLE_PLANT, 100,
				ChatColor.YELLOW + "TOTEM OF " + ChatColor.LIGHT_PURPLE + "EXPLOSIVENESS"));
		inv.setItem(10,
				createItem(Material.DOUBLE_PLANT, 100, ChatColor.YELLOW + "TOTEM OF " + ChatColor.WHITE + "RABINESS"));

		ItemStack back = new ItemStack(Material.WOOL, 1, (short) 14);
		ItemMeta backMeta = back.getItemMeta();
		backMeta.setDisplayName(ChatColor.DARK_RED + "" + ChatColor.BOLD + "<--CLOSE-->");
		back.setItemMeta(backMeta);
		inv.setItem(26, back);

	}

	@EventHandler
	public void onInteract(PlayerInteractEntityEvent e) {
		Player p = e.getPlayer();
		Entity entity = e.getRightClicked();

		if (entity instanceof Witch) {
			if (entity.getCustomName().equalsIgnoreCase(Shops.WITCH.toString())) {
				openInventory(p);
				p.sendMessage("yeah");
				e.setCancelled(true);
			}
		}
	}

	public static ItemStack createItem(Material mat, int money, String str) {

		ItemStack item = new ItemStack(mat, 1);
		ItemMeta meta = item.getItemMeta();
		meta.setDisplayName(str);
		ArrayList<String> lore = new ArrayList<String>();
		lore.add(ChatColor.GOLD + "" + ChatColor.BOLD + "$" + (money));
		meta.setLore(lore);
		item.setItemMeta(meta);

		return item;
	}

	public static ItemStack createBarrier() {

		ItemStack item = new ItemStack(Material.BARRIER, 1);
		ItemMeta meta = item.getItemMeta();
		meta.setDisplayName(ChatColor.DARK_RED + "" + ChatColor.BOLD + "UNKNOWN");
		item.setItemMeta(meta);

		return item;
	}

	public static ItemStack createItem(Player p, Material cont, String name) {
		ItemStack item = new ItemStack(cont);
		ItemMeta meta = item.getItemMeta();
		meta.setDisplayName(name);
		item.setItemMeta(meta);

		return item;
	}

	public static ItemStack maxedItem(Material mat, Enchantment ench, int level) {

		ItemStack item = new ItemStack(mat, 1);
		ItemMeta meta = item.getItemMeta();
		meta.setDisplayName(ChatColor.DARK_RED + "" + ChatColor.BOLD + "You have maxed out " + ench.getName());
		meta.addEnchant(Enchantment.LUCK, 10, true);
		item.setItemMeta(meta);

		return item;
	}

	boolean haveMoney(int money, Player p) {
		if (plugin.getplayerdata().getInt(p.getName() + ".money") >= money) {
			return true;
		}
		return false;
	}

	void removeMoney(int money, Player p) {
		plugin.getplayerdata().set(p.getName() + ".money",
				(plugin.getplayerdata().getInt(p.getName() + ".money") - money));
	}

	boolean isItem(ItemStack clicked, int itemNum) {

		if (inv.getItem(itemNum) == null) {
			return false;
		} else if (!inv.getItem(itemNum).hasItemMeta()) {
			return false;
		}
		if (clicked.getItemMeta().getDisplayName().equals(inv.getItem(itemNum).getItemMeta().getDisplayName())) {
			return true;
		}
		return false;
	}

}
